version: "3"

services:
  api-server:
    container_name: api-server
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      MEILI_URL: ${MEILI_URL}
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
  postgres:
    container_name: postgres
    image: postgres:15.4
    restart: always
    working_dir: /app
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qr"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - "postgres_data_dev:/var/lib/postgresql"
  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:prototype-japanese-6
    restart: always
    working_dir: /app
    ports:
      - 7700:7700
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qr"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
    volumes:
      - "meili_data:/data.ms"
  caddy:
    image: caddy:2.7.4-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/config:/config
      - ./caddy/data:/data
volumes:
  postgres_data_dev:
  meili_data:

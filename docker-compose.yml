version: "3"


services:
  api-server:
    container_name: api-server
    build:
      context: .
    volumes:
      - .:/app
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      MEILI_URL: ${MEILI_URL}
      ADMINISTRATOR_PASS_KEY: ${ADMINISTRATOR_PASS_KEY}
      ADMINISTRATOR_LIMIT_DAYS: ${ADMINISTRATOR_LIMIT_DAYS}
      EQUIPMENT_MANAGER_PASS_KEY: ${EQUIPMENT_MANAGER_PASS_KEY}
      EQUIPMENT_MANAGER_LIMIT_DAYS: ${EQUIPMENT_MANAGER_LIMIT_DAYS}
      GENERAL_PASS_KEY: ${GENERAL_PASS_KEY}
      GENERAL_LIMIT_DAYS: ${GENERAL_LIMIT_DAYS}
    depends_on:
      - db
    networks:
      - net
    tty:
      true
  db:
    image: postgres:15
    container_name: postgres
    working_dir: /app
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - "postgres_data_dev:/var/lib/postgresql"
    networks:
      - net
  search-engine:
    image: getmeili/meilisearch:prototype-japanese-6
    container_name: meilisearch
    working_dir: /app
    ports:
      - 7700:7700
    restart: always
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
    volumes:
      - "meili_data:/data.ms"
    networks:
      - net
volumes:
  postgres_data_dev:
  meili_data:
networks:
  net:
    driver: bridge
